장르: 슈팅(탄막)

--Core Frame(핵심 게임플레이)--
보스 - 플레이어
플레이어: 보스를 향해 공격(총알 발사) - 키 입력
보스: 적을 향해 공격(총알 발사, 탄막) - AI 작동
각자의 총알 충돌. 체력이 감소
한명이 사망하면 게임 종료

--부가적인 작업--

효과음
이펙트

타이틀씬
메인게임 씬
결과 씬


탄막의 핵심 
1. 총알은 어떤 방식으로 생성하는가?
2. 어떤 방식으로 움직이는가?


포인터(Pointer)

어떠한 주소를 가리킴.
주소가 들어갈 공간을 지정한다.

의의(용도)
-필요할때만 쓰고싶다.
-필요없을때는 삭제하고싶다.
단점
다만, 직접 접근하는 방식(int i;)에 비해 접근과정을 한번 더 거치므로 느리다
int i; 에 비해 int *i; 가 훨씬 더 용량을 많이 먹는다
(즉, 필요할때만 쓴다)
동적 할당 == 프로그램을 시작할때부터 되어있긴 하지만 제어하고싶을때는 포인터를 사용한다.

값복사
// 내가 쏜 총알일때는

//캐릭터
	// tag가 총알태그이면

	// other.gameObject 에서 총알 스크립트 컴포넌트를 뽑아냄

	// 총알 스크립트의 쏜 객체 정보 조사

	// 그 정보가 나이면 패스
//총알

	//tag가 캐릭터이면

		//other.gameObject에서 캐릭터 스크립트 컴포넌트를 뽑아냄
		//죽었으면, 패스

	//tag가 건물이면

		//other.gameObject에서 건물 스크립트 컨포넌트를 뽑아냄

		//파괴되었으면, 패스

//우리 게임에서 사용하는 게임 오브젝트인가?

	//공통된 스크립트 컴포넌트를 뽑아냄.

	//컴포넌트가 충돌 가능한가를 체크.

	//충돌 또는 패스